name: Load JSON dataset for continual learning with temporal splitting
description: Fetches JSON from API and prepares sequential tasks for continual learning with STGNN, supporting temporal, anomaly, and drift splitting strategies.

inputs:
  - {name: api_url, type: String, description: 'API URL to fetch JSON dataset'}
  - {name: access_token, type: string, description: 'Bearer access token for API auth'}
  - {name: num_tasks, type: int, description: 'Number of continual learning tasks to create', default: 3}
  - {name: splitting_strategy, type: string, description: 'Strategy for splitting data: temporal_split, anomaly_split, drift_split', default: 'temporal_split'}
  - {name: test_size, type: float, description: 'Fraction of data to use for testing', default: 0.2}
  - {name: val_size, type: float, description: 'Fraction of remaining data to use for validation', default: 0.2}

outputs:
  - {name: task_datasets, type: Dataset, description: 'List of task datasets for continual learning'}
  - {name: task_metadata, type: Dataset, description: 'Metadata for each continual learning task'}
  - {name: scaler_data, type: Dataset, description: 'Data scaler for consistent normalization across tasks'}

implementation:
  container:
    image: python:3.9
    command:
      - sh
      - -c
      - |
        python3 -m pip install --quiet requests pandas scikit-learn numpy || \
        python3 -m pip install --quiet requests pandas scikit-learn numpy --user
        exec "$0" "$@"
      - python3
      - -u
      - -c
      - |
        # (your full Python code stays here as you already wrote)
    args:
      - --api_url
      - {inputValue: api_url}
      - --access_token
      - {inputPath: access_token}
      - --num_tasks
      - {inputValue: num_tasks}
      - --splitting_strategy
      - {inputValue: splitting_strategy}
      - --test_size
      - {inputValue: test_size}
      - --val_size
      - {inputValue: val_size}
      - --task_datasets
      - {outputPath: task_datasets}
      - --task_metadata
      - {outputPath: task_metadata}
      - --scaler_data
      - {outputPath: scaler_data}
